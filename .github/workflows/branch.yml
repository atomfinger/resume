name: Branch build

on:
  push:
    branches-ignore:
      - main

jobs:

  python_tests:
    name: Execute resume tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2.1.4
        with:
          node-version: 12

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          npm install -g resume-cli
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install -r requirements.txt
          python setup.py install

      - name: Validate resume schema
        run: resume validate

      - name: Run unit tests
        run: pytest

      - name: Converting JSON to Markdown
        run: |
          python ./resume/__main__.py --input 'resume.json' --output 'resume.md' --format 'markdown'

      - name: Check spelling
        uses: sbates130272/spellcheck-github-actions@v0.6.0

      - name: Verify URLs
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          file-path: ./resume.md


  convert_resume:
    name: Generate resume files
    runs-on: ubuntu-latest
    needs: python_tests

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2.1.4
        with:
          node-version: 12

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Setup
        run: |
          npm install -g resume-cli
          npm install jsonresume-theme-even
          npm install jsonresume-theme-onepage
          npm install jsonresume-theme-paper
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python setup.py install
          mkdir output
          mkdir tmp

      - name: JSON -> HTML
        run: |
          resume export output/resume.html --format html
          resume export ./tmp/resumeonepage.html --format html --theme onepage
          resume export ./tmp/resumeshort.html --format html --theme short

      - name: HTML -> PDF
        uses: fifsky/html-to-pdf-action@master
        with:
          htmlFile: ./tmp/resumeonepage.html
          outputFile: ./output/resume.pdf
          pdfOptions: '{"format": "A4", "margin": {"top": "10mm", "left": "10mm", "right": "10mm", "bottom": "10mm"}}'

      - name: JSON -> Markdown
        run: python ./resume/__main__.py --input 'resume.json' --output 'output/resume.md' --format 'markdown'

      - name: JSON -> XML
        run: python ./resume/__main__.py --input 'resume.json' --output 'output/resume.xml' --format 'xml'

      - name: JSON -> YAML
        run: python ./resume/__main__.py --input 'resume.json' --output 'output/resume.yml' --format 'yaml'

      - name: JSON -> CSV
        run: python ./resume/__main__.py --input 'resume.json' --output 'output/resume.csv' --format 'csv'

      - name: Markdown -> TXT
        uses: docker://pandoc/latex:2.9
        with:
          args: --output=output/resume.txt
            ./output/resume.md

      - name: TXT -> Morse Code (TXT)
        run: python ./resume/__main__.py --input 'output/resume.txt' --output 'output/resume_morse_code.txt' --format 'morse'

      - name: PDF -> JPG
        run: |
          sudo apt install poppler-utils
          python ./resume/__main__.py --input 'output/resume.pdf' --output 'output/resume.jpg' --format 'jpg'

      - name: HTML -> DOCX
        timeout-minutes: 5
        run: |
          sudo add-apt-repository ppa:libreoffice/ppa
          sudo apt-get update
          sudo apt-get install libreoffice
          libreoffice --headless --convert-to "docx:Office Open XML Text" ./tmp/resumeshort.html
          mv resumeshort.docx ./output/resume.docx

      - name: Generate artifacts
        uses: actions/upload-artifact@v2
        with:
          name: resume
          path: output

  deploy:
    needs: convert_resume
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: resume

      - name: Bump version and push tag
        id: version_bump
        uses: anothrNick/github-tag-action@1.17.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_BRANCHES: main
          WITH_V: true

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version_bump.outputs.tag  }}
          release_name: Resume - ${{ steps.version_bump.outputs.tag  }}
          draft: false
          prerelease: false

      - name: Upload PDF
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/resume.pdf
          asset_name: resume.pdf
          asset_content_type: application/pdf

      - name: Upload HTML
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/resume.html
          asset_name: resume.html
          asset_content_type: text/html

      # - name: Upload DOCX
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./output/resume.docx
      #     asset_name: resume.docx
      #     asset_content_type: application/vnd.openxmlformats-officedocument.wordprocessingml.document

      - name: Upload JSON
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/resume.json
          asset_name: resume.json
          asset_content_type: application/json

      - name: Upload TXT
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/resume.txt
          asset_name: resume.txt
          asset_content_type: application/text

      - name: Upload Morse Code
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/resume.txt
          asset_name: resume.txt
          asset_content_type: application/text

      - name: Upload Markdown
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/resume.md
          asset_name: resume.md
          asset_content_type: application/text

      - name: Upload XML
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/resume.xml
          asset_name: resume.xml
          asset_content_type: application/xml

      - name: Copy HTML file to public
        run: |
          mkdir public
          cp ./output/resume.html ./public/index.html
          cp ./output/resume.json ./public/resume.json
          cp ./output/resume.txt ./public/resume.txt

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          publish_branch: github-page