name: Pipeline build

on:
  push:

jobs:
  python_tests:
    name: Execute resume tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2.1.4
        with:
          node-version: 12

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          npm install -g resume-cli
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install -r requirements.txt
          python setup.py install

      - name: Validate resume schema
        run: resume validate

      - name: Run unit tests
        run: pytest

      - name: Converting JSON to Markdown
        run: |
          python ./resume/__main__.py --input 'resume.json' --output 'resume.md' --format 'markdown'

      - name: Check spelling
        uses: sbates130272/spellcheck-github-actions@v0.6.0

      - name: Verify URLs
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          file-path: ./resume.md


  convert_resume:
    name: Generate resume files
    runs-on: ubuntu-latest
    needs: python_tests

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2.1.4
        with:
          node-version: 12

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Setup
        run: |
          npm install -g resume-cli
          npm install jsonresume-theme-even
          npm install jsonresume-theme-paper
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python setup.py install
          mkdir output
          mkdir tmp

      - name: JSON -> HTML
        run: |
          resume export output/resume.html --format html

      - name: HTML -> PDF
        run: |
          python ./resume/__main__.py --input 'resume.json' --output 'resume-simple.json' --format 'simplify'
          mv resume.json resume-full.json
          cp resume-basic.json resume.json
          resume export output/resume.pdf --format pdf --theme paper
          rm resume.json
          cp resume-full.json resume.json

      - name: JSON -> Markdown
        run: python ./resume/__main__.py --input 'resume.json' --output 'output/resume.md' --format 'markdown'

      - name: JSON -> XML
        run: python ./resume/__main__.py --input 'resume.json' --output 'output/resume.xml' --format 'xml'

      - name: JSON -> YAML
        run: python ./resume/__main__.py --input 'resume.json' --output 'output/resume.yml' --format 'yaml'

      - name: JSON -> CSV
        run: python ./resume/__main__.py --input 'resume.json' --output 'output/resume.csv' --format 'csv'

      - name: Markdown -> TXT
        uses: docker://pandoc/latex:2.9
        with:
          args: --output=output/resume.txt
            ./output/resume.md

      - name: TXT -> Morse Code (TXT)
        run: python ./resume/__main__.py --input 'output/resume.txt' --output 'output/resume_morse_code.txt' --format 'morse'

      #- name: PDF -> JPG
      #  run: |
      #    sudo apt install poppler-utils
      #    python ./resume/__main__.py --input 'output/resume.pdf' --output 'output/resume.jpg' --format 'jpg'

      - name: Generate artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: output

  create_release:
    name: Bump version & create release
    needs: convert_resume
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Bump version and push tag
        id: version_bump
        uses: anothrNick/github-tag-action@1.17.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_BRANCHES: main
          WITH_V: true

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version_bump.outputs.tag  }}
          release_name: Resume - ${{ steps.version_bump.outputs.tag  }}
          draft: false
          prerelease: false

  upload_assets:
    name: Upload assets
    needs: create_release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        include:
          - asset: resume.pdf
            asset_content_type: application/pdf
          - asset: resume.html
            asset_content_type: text/html
          - asset: resume.json
            asset_content_type: application/json
          - asset: resume.txt
            asset_content_type: application/text
          - asset: resume_morse_code.txt
            asset_content_type: application/text
          - asset: resume.md
            asset_content_type: text/markdown
          - asset: resume.xml
            asset_content_type: application/xml
          - asset: resume.jpg
            asset_content_type: image/jpeg
          - asset: resume.csv
            asset_content_type: text/csv
          - asset: resume.yml
            asset_content_type: text/yaml
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: artifacts

      - name: Upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./artifacts/${{ matrix.asset }}
          asset_name: ${{ matrix.asset }}
          asset_content_type: ${{ matrix.asset_content_type }}

  deploy_github_pages:
    name: Deploy to GitHub Pages
    needs: upload_assets
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: artifacts

      - name: Copy HTML file to public
        run: |
          mkdir public
          cp ./artifacts/resume.html ./public/index.html
          cp ./artifacts/. ./public/.

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          publish_branch: github-page